 --------
 PROGRAMS
 --------

 **** ANALYZER.CC ****

    "analyzer.cc" is an exhaustive main program that allows the 
 user to control all parameters and configuration files provided to the 
 library, and to choose different kinds of I/O formats.
  This program is provided as a sample, as well as a main program to access
 the analisys library for those who just want a ready-to-use analyzer.
  The used options are controlled via configuration file, or via
 command-line options.

  See user manual for details on the available options

 **** ANALYZER_SERVER.CC and ANALYZER_CLIENT.CC ****

   "analyzer_server.cc" behaves exactly like "analyzer.cc", except for that 
 instead of reading/writing to stdin/stdout, it creates two named pipes and
 performs I/O operations through it. 
   "analyzer_client.cc" sends text and retrieves analysis from those named pipes.

    This means that the analyzer doesn't need to be loaded and initialized for
  each file to be processsed. It may be permanently loaded, and clients just have
  to send text to analyze.

   Mutual exclusion is not handled, so, if several clients send text simultaneously, 
  the output will be mixed.

    To call "analyzer_server.cc", just add as the first parameter, before any other option,
   a string which will be used as the name for the pipes.

    To call "analyzer_client.cc", give as parameter the string corresponding to the name of 
    the pipe of the desired server.

 -------
 SCRIPTS
 -------

 **** ANALYZE ****

 This script just calls analyzer.cc, and so, it accepts the same command
 line options.

 The only differences are:

 1.- The -f option (configuration file) does not need to be the full path 
    of an existing file. If the file is not found, it is searched in 
    share/FreeLing/config under FreeLing installation directory.

 2.- You don't need to properly set LD_LIBRARY_PATH, since the script will 
    try to locate FreeLing libraries

 3.- If you specify a string before other options, "analyzer_server" will be called
     instead of "analyzer".  Then, you'll have to use "analyzer_client" to input text.

 **** ANALYZE.UTF ****

 This script just calls analyzer.cc, and so, it accepts the same command
 line options.

 The only differences are:

 1.- The -f option (configuration file) does not need to be the full path 
    of an existing file. If the file is not found, it is searched in 
    share/FreeLing/config under FreeLing installation directory.

 2.- You don't need to properly set LD_LIBRARY_PATH, since the script will 
    try to locate FreeLing libraries

 3.- The input is assumed to be in UTF-8, and so the 'uniconv' utility is
    used to convert it before calling the analyzer. The analyzer output 
    is also converted back to UTF-8.

 4.- If you specify a string before other options, "analyzer_server" will be called
     instead of "analyze"
