#!/bin/bash

#  usage:
#
#  - analyze stdin in interactive mode:
#     analyze [options]    
#
#  - start an analyzer server
#     analyze NAME [options]    
#
#  - stop an analyzer server
#     analyze stop NAME
#
#  Executes freeling analyzer with given options, taking care of
#  paths and default locations
# 
#  This script also checks whether the config file given with option -f
#  is found in the current directory. If not, it is searched in
#  share/FreeLing/config under FreeLing installation directory.


## Execute FreeLing environment initialization
. $(cd $(dirname $0) && echo $PWD)/initialize $@

## call actual executable
if [[ "x$1" == "x-"* || "x$1" == "x" ]]; then
  # if first parameter is an option (e.g. -f, --nodates, etc)
  # use normal interactive mode
  $FREELING/bin/analyzer $param
else
  # if first parameter is NOT an option, assume
  # it's a name for a pipe and start in client/server mode, 
  # unless it's the word "stop"

  if [[ "$1" == "stop" ]]; then
    if [[ "x$2" == "x" ]]; then
      echo "Missing name for server to stop."
      exit
    fi
    pid=`ps -ef | grep $2 | grep analyzer_server | awk '{print $2}'`
    if [[ "x$pid" == "x" ]]; then
      echo "Server $2 not running"
      exit
    fi
    kill -15 $pid
  else
    echo ""
    echo "First parameter '$1' is not an option. Starting server mode."
    echo ""
    echo "You can now analyze text with: "
    echo "      analyzer_client_npipe $1  <input.txt >output.txt"
    echo ""
    echo "Stop the server with: "
    echo "      analyze stop $1"
    echo ""
    $FREELING/bin/analyzer_server_npipe $param &
  fi
fi




