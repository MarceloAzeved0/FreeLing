#!/bin/bash

#
#  usage:
#
#   analyze.utf  [options] 
#
#  Executes an analyzer with given options
# 
#  The script reads from stdin assuming utf-8 encoding. Converts to
#  iso-8859-1, and feeds the analyzer.
#  Analyzer output is converted to utf-8 and sent to stdout
#
#  This script also checks whether the config file given with option -f
#  is found in the current directory. If not, it is searched in
#  share/FreeLing/config under FreeLing installation directory.


## Get relative location of this script
path=$(dirname $0)
if [ "${path#./}" != "${path}" ]; then
  path="$(pwd)/${path#./}"
fi
if [ "${path#/}" = "${path}" ]; then
  if [ "${path}" = "." ]; then
    path="$(pwd)";
  else
    path="$(pwd)/${path}"
  fi
fi

## Convert relative to absolute, to find out FreeLing install dir.
pushd $path >/dev/null; cd ..;  FREELING=`pwd`; popd >/dev/null;

## define FREELINGSHARE (if not already defined), which is used in default config files
if [ "x$FREELINGSHARE" == "x" ]; then
  export FREELINGSHARE=$FREELING/share/FreeLing
fi

# Prepare to execute FreeLing
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$FREELING/lib

## pass all parameters to the executable, fixing the config file if necessary
i=1;  eval arg=\${$i}
param=""
while [[ $i -le $# ]]; do

   param="$param $arg"

   if [ "$arg" == "-f" ]; then
     let i=$i+1; eval arg=\${$i}

     if [ -e $arg ]; then
       param="$param $arg"
     else 
       param="$param $FREELING/share/FreeLing/config/$arg"
     fi
   fi

   let i=$i+1;  eval arg=\${$i}
done

iconv -f utf-8 -t iso-8859-1 - | $FREELING/bin/analyzer $param | iconv -f iso-8859-1 -t utf-8 -
